"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"Indicates what fields are available at the top level of a query operation."
type Query {
    user(
        id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])
        email: String @eq @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    users(
        name: String @where(operator: "like")
    ): [User!]! @paginate(defaultCount: 10) @guard

    post( id: ID @eq ):Post @find
    postResolver(id: ID!): Post
    posts(
        title: String @where(operator: "like")
    ): [Post!]! @paginate(defaultCount: 10)  @orderBy(column:"created_at", direction:"DESC")

    postsResolver: [Post!]!

    me: User @guard @auth
}

type Mutation {
    createPost(
        user_id: ID!
        title: String! @rules(apply: ["required", "string", "min:3"])
        body: String! @rules(apply: ["required", "string", "min:3"])
    ): Post @create

    createPostResolver(
        user_id: ID!
        title: String! @rules(apply: ["required", "string", "min:3"])
        body: String! @rules(apply: ["required", "string", "min:3"])
    ): Post

    updatePost(
        id: ID!
        title: String! @rules(apply: ["required", "string", "min:3"])
        body: String! @rules(apply: ["required", "string", "min:3"])
    ): Post @update

    deletePost(
        id: ID!
    ): Post @delete

    loginTest(
        email: String!
        password: String!
        device_name: String!
    ): AccessTokenTest! @field(resolver: "App\\GraphQL\\Mutations\\LoginTestResolver")
}

type User {
    id: ID!
    posts: [Post!]! @hasMany
    name: String!
    email: String!
    email_verified_at: DateTime
    created_at: DateTime!
    updated_at: DateTime!
}

type Post {
    id: ID!
    user: User! @belongsTo
    title: String!
    body: String!
    created_at: DateTime!
    updated_at: DateTime!
}

type AccessTokenTest {
    token: String!
}
